import { useState } from "react";
import { Link } from "react-router-dom";
import { Button } from "@/components/ui/button";
import WarningTape from "@/components/WarningTape";
import BookingCalendarPicker from "@/components/BookingCalendarPicker";
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription } from "@/components/ui/dialog";
import { toast } from "@/components/ui/use-toast";
import bookingService from "@/lib/bookingService";

const DangerZoneQuest = () => {
  const [selectedDate, setSelectedDate] = useState<Date | undefined>(undefined);
  const [selectedTime, setSelectedTime] = useState<string | null>(null);
  const [isBookingOpen, setIsBookingOpen] = useState(false);
  const [name, setName] = useState("");
  const [phone, setPhone] = useState("");
  
  // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞—Ç (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –¥–æ–ª–∂–Ω—ã –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è —Å —Å–µ—Ä–≤–µ—Ä–∞)
  const blockedDates = [
    new Date(new Date().getFullYear(), new Date().getMonth(), 15),
    new Date(new Date().getFullYear(), new Date().getMonth(), 20),
    new Date(new Date().getFullYear(), new Date().getMonth(), 25)
  ];
  
  // –ü—Ä–∏–º–µ—Ä –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤
  const timeSlots = [
    { time: "12:00", available: true },
    { time: "13:30", available: true },
    { time: "15:00", available: true },
    { time: "16:30", available: true },
    { time: "18:00", available: true },
    { time: "19:30", available: true },
    { time: "21:00", available: true },
    { time: "22:30", available: true },
  ];

  const handleBookTime = (time: string) => {
    setSelectedTime(time);
    setIsBookingOpen(true);
  };

  const handleSubmitBooking = (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!name || !phone) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è",
        variant: "destructive"
      });
      return;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
    if (selectedDate && selectedTime) {
      const booking = {
        id: Math.random().toString(36).substring(2, 11),
        questId: "danger",
        questType: "danger" as "artifact" | "danger",
        date: format(selectedDate, 'yyyy-MM-dd'),
        time: selectedTime,
        name,
        phone,
        peopleCount: 4,
        status: 'pending'
      };
      
      bookingService.addBooking(booking);
      
      toast({
        title: "–ë—Ä–æ–Ω—å –≤ —Ä–µ–∑–µ—Ä–≤–µ",
        description: "–°–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –æ–ø–µ—Ä–∞—Ç–æ—Ä –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è",
      });
    }
    
    setIsBookingOpen(false);
    setName("");
    setPhone("");
  };

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–µ–Ω—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—Ä–µ–º–µ–Ω–∏
  const getPrice = (time: string) => {
    const hour = parseInt(time.split(":")[0]);
    return hour >= 21 ? "1000" : "900";
  };

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≤—Ä–µ–º–µ–Ω–∏
  const isTimeAvailable = (time: string) => {
    if (!selectedDate) return false;
    
    const dateStr = format(selectedDate, 'yyyy-MM-dd');
    return bookingService.isTimeSlotAvailable(dateStr, time, "danger");
  };

  return (
    <div className="brick-wall-bg min-h-screen toxic-waste-bg relative">
      <div className="green-smoke"></div>
      
      {/* –í–µ—Ä—Ö–Ω—è—è —á–µ—Ä–Ω–æ-–∂–µ–ª—Ç–∞—è –ª–µ–Ω—Ç–∞ */}
      <WarningTape />
      
      <div className="container mx-auto px-4 py-12 relative z-10">
        <Link to="/" className="inline-block mb-6">
          <Button variant="outline" className="text-yellow-DEFAULT border-yellow-DEFAULT bg-black">
            ‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
          </Button>
        </Link>
        
        {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ—Ç–∏–≤–æ–≥–∞–∑–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –±–∞–Ω–Ω–µ—Ä–∞ */}
        <div className="mb-8 flex justify-center">
          <div className="relative w-full max-w-xl overflow-hidden rounded-lg caution-border">
            <img 
              src="https://cdn.poehali.dev/files/b4cf6771-45d7-4b94-b475-2e1ac5f8f74b.jpg" 
              alt="–ü—Ä–æ—Ç–∏–≤–æ–≥–∞–∑ - –ö–≤–µ—Å—Ç –û–ø–∞—Å–Ω–∞—è –∑–æ–Ω–∞" 
              className="w-full h-[300px] object-cover"
            />
            <div className="absolute inset-0 bg-gradient-to-t from-black to-transparent opacity-70"></div>
            <h1 className="absolute bottom-4 left-0 w-full text-4xl font-bold text-yellow-DEFAULT text-center mb-4 flashing-light">
              –•–û–†–†–û–† –ö–í–ï–°–¢!
            </h1>
          </div>
        </div>
        
        <div className="caution-border p-8 bg-black bg-opacity-80 max-w-4xl mx-auto">
          <div className="mb-8">
            <h2 className="text-2xl font-bold text-orange-DEFAULT mb-2">–°—é–∂–µ—Ç:</h2>
            <p className="text-orange-DEFAULT">
              –í—ã –≥—Ä—É–ø–ø–∞ —Å—Ç–∞–ª–∫–µ—Ä–æ–≤, —á—å–∏ –∂–∏–∑–Ω–∏ –ø–æ–≥—Ä—è–∑–ª–∏ –≤ –¥–æ–ª–≥–∞—Ö, –∏ –≤–æ—Ç –ª—É—á–∏–∫ —Å–≤–µ—Ç–∞ ‚Äì –ø—Ä–æ—Ö–æ–¥–∏—Ç –º–æ–ª–≤–∞, 
              —á—Ç–æ –∑–∞ –¥–Ω–µ–≤–Ω–∏–∫ –æ–¥–Ω–æ–≥–æ –∏–∑ —É—á–µ–Ω–æ–≥–æ, –≥–æ—Ç–æ–≤—ã –∑–∞–ø–ª–∞—Ç–∏—Ç—å –æ–≥—Ä–æ–º–Ω—ã–µ –¥–µ–Ω—å–≥–∏. 
              –í—ã –Ω–µ —Ä–∞–∑–¥—É–º—ã–≤–∞–µ—Ç–µ –∏ –±—Ä–æ—Å–∞–µ—Ç–µ—Å—å –Ω–∞ –ø–æ–∏—Å–∫–∏ —ç—Ç–æ–≥–æ –¥–Ω–µ–≤–Ω–∏–∫–∞, –ø—Ä—è–º–æ –≤ –ª–æ–≥–æ–≤–æ –æ–ø–∞—Å–Ω–æ—Å—Ç–∏.
            </p>
          </div>
          
          <div className="flex flex-col md:flex-row gap-6 mb-8">
            <div className="flex-1">
              <div className="p-4 border border-yellow-DEFAULT rounded-md bg-black bg-opacity-70">
                <h3 className="text-xl font-bold text-orange-DEFAULT mb-2">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–≤–µ—Å—Ç–µ:</h3>
                <ul className="text-orange-DEFAULT space-y-2">
                  <li>üë• –ö–æ–º–∞–Ω–¥–∞ –æ—Ç 4‚Äì10 —á–µ–ª–æ–≤–µ–∫</li>
                  <li>üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –í–æ–∑—Ä–∞—Å—Ç: 18+, 14+, 13+ –≤ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ</li>
                  <li>üí∞ –¶–µ–Ω–∞ –∑–∞ 1 —á–µ–ª–æ–≤–µ–∫–∞, —É–∫–∞–∑–∞–Ω–∞ –ø–æ–¥ –≤—Ä–µ–º–µ–Ω–µ–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è</li>
                </ul>
              </div>
            </div>
            
            <div className="flex-1">
              {/* –ö–∞–ª–µ–Ω–¥–∞—Ä—å —Å –≤—ã–±–æ—Ä–æ–º –¥–∞—Ç—ã */}
              <BookingCalendarPicker
                selectedDate={selectedDate}
                onDateSelect={setSelectedDate}
                blockedDates={blockedDates}
              />
            </div>
          </div>
          
          {selectedDate && (
            <div className="mb-8">
              <h3 className="text-xl font-bold text-orange-DEFAULT mb-4">–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è:</h3>
              <div className="grid grid-cols-2 sm:grid-cols-4 gap-4">
                {timeSlots.map((slot) => {
                  const available = isTimeAvailable(slot.time);
                  
                  return (
                    <div key={slot.time} className="text-center">
                      <button
                        disabled={!available}
                        onClick={() => available && handleBookTime(slot.time)}
                        className={`w-full p-3 border-2 ${
                          available 
                            ? "border-yellow-DEFAULT text-yellow-DEFAULT hover:bg-yellow-DEFAULT hover:text-black" 
                            : "border-red-500 text-red-500 line-through opacity-50"
                        } bg-black rounded-md transition-colors`}
                      >
                        {slot.time}
                      </button>
                      <p className="mt-1 text-orange-DEFAULT">
                        {available ? `${getPrice(slot.time)}‚ÇΩ` : "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"}
                      </p>
                    </div>
                  )}
                )}
              </div>
            </div>
          )}
        </div>
      </div>
      
      {/* –î–∏–∞–ª–æ–≥ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è */}
      <Dialog open={isBookingOpen} onOpenChange={setIsBookingOpen}>
        <DialogContent className="bg-black border-yellow-DEFAULT text-orange-DEFAULT">
          <DialogHeader>
            <DialogTitle className="text-yellow-DEFAULT">–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ</DialogTitle>
            <DialogDescription className="text-orange-DEFAULT">
              –í—ã–±—Ä–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è: {selectedTime}
            </DialogDescription>
          </DialogHeader>
          
          <form onSubmit={handleSubmitBooking} className="space-y-4">
            <div className="space-y-2">
              <label htmlFor="name" className="text-yellow-DEFAULT">–í–∞—à–µ –∏–º—è</label>
              <input
                id="name"
                value={name}
                onChange={(e) => setName(e.target.value)}
                className="w-full p-2 bg-gray-800 border border-yellow-DEFAULT text-orange-DEFAULT rounded"
                required
              />
            </div>
            
            <div className="space-y-2">
              <label htmlFor="phone" className="text-yellow-DEFAULT">–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</label>
              <input
                id="phone"
                type="tel"
                value={phone}
                onChange={(e) => setPhone(e.target.value)}
                className="w-full p-2 bg-gray-800 border border-yellow-DEFAULT text-orange-DEFAULT rounded"
                required
              />
            </div>
            
            <div className="pt-4">
              <Button 
                type="submit" 
                className="w-full bg-yellow-DEFAULT text-black hover:bg-orange-DEFAULT"
              >
                –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å
              </Button>
            </div>
          </form>
        </DialogContent>
      </Dialog>
      
      {/* –ù–∏–∂–Ω—è—è —á–µ—Ä–Ω–æ-–∂–µ–ª—Ç–∞—è –ª–µ–Ω—Ç–∞ */}
      <WarningTape />
    </div>
  );
};

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã
function format(date: Date, formatString: string): string {
  const year = date.getFullYear();
  const month = String(date.getMonth() + 1).padStart(2, '0');
  const day = String(date.getDate()).padStart(2, '0');
  
  return formatString
    .replace('yyyy', String(year))
    .replace('MM', month)
    .replace('dd', day);
}

export default DangerZoneQuest;
